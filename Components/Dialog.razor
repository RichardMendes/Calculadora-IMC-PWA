@inject IJSRuntime JsRunRime
@inject NavigationManager NavigationManager

<dialog id="result-dialog">
    <div class="dialog-content">
        @ChildContent
        <br />
        <button @onclick="HideModalAsync" class="btn btn-filled btn-auto mb">
            Registrar IMC
        </button>
    </div>
</dialog>


@code {
    [EditorRequired]
    [Parameter]
    public RenderFragment ChildContent { get; set; } = null!;

    [Parameter]
    public EventCallback<MouseEventArgs> OnModalCloseCAllback { get; set; } /* Item  */

    public async Task ShowModalAsync()
    {
        await JsRunRime.InvokeVoidAsync("showModal","result-dialog");
        StateHasChanged();
    }

    private async Task HideModalAsync()
    {
        await JsRunRime.InvokeVoidAsync("hideModal", "result-dialog");
        StateHasChanged();
        NavigationManager.NavigateTo("#history");
        await OnModalCloseCAllback.InvokeAsync();
    }
}
